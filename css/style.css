/* La reglla de CSS consta de 2 partes:
1) El selector
2) Bloque de declaraci√≥n {
    atributo: valor;
    atributo-de-dos-palabras: valor;
*/

/* Es una mala practica porque son bloqueants a la hora que el navegador lee esta*/
@import url(otra-hoja.css);

h1 {
    color: darkblue;
    background-color: black;
}

/* Selectores B√°sicos

1) Etiquetas- son elementos html
2) Identificadores- atributo id - #
2) clases - atributo class - .

*/

p {
    color: midnightblue;
}

/* Dar estilos con Id se considera un AntiPatr√≥n */
#parrafo-2 {
    background-color: skyblue;
}

/* Dar estilos con clases nos permite reutilizar nuestro c√≥digo css */

.bg-skyblue {
    background-color: skyblue;
}

.bg-steelblue {
    background-color: steelblue;
}

.text-20 {
    font-size: 20px;
}

.text-32 {
    font-size: 32px;
}

.text-white {
    color: white;
}

/*---------------------- SELECTORES------------------------- */
.hijos-directos>b {
    background-color: thistle;
}

.hijos-descendientes b {
    background-color: thistle;
}


/* Los selectores de hermanos van a aplicar a los elementos que son hnos y que esten por debajo del elemento de referencia*/
.hermanos-general~li {
    background-color: thistle;
}

.hermanos-adyacentes+li {
    background-color: thistle;
}

/* Selectores de atributo */

.selectores-atributos a[href] {
    color: orangered;
}

.selectores-atributos a[target="_blank"] {
    font-weight: bold;
}

/* El comod√≠n del * aplica el estilo si contiene el texto en cuesti√≥n en cualquier parte */
.selectores-atributos a[href*="jonmircha"] {
    font-size: 24px;
}

/* El comod√≠n del ^ aplica el estilo si contiene el texto en cuesti√≥n al inicio */
.selectores-atributos a[href^="http://"] {
    text-decoration: none;
}

/* El comod√≠n del $ aplica el estilo si contiene el texto en cuesti√≥n al final */
.selectores-atributos a[href$=".com"] {
    background-color: black;
}

/* El comod√≠n del ~ aplica el estilo si contiene el texto en cuesti√≥n en una lista separada por espacios */
.selectores-atributos a[class~="cursos"] {
    background-color: midnightblue;
}

/* El comod√≠n del | aplica el estilo si contiene el texto en cuesti√≥n en una lista separada por espacios y que despues del texto en cuesti√≥n venga un gui√≥n medio - */
.selectores-atributos a[class|="menu"] {
    font-style: italic;
}

/* Selector universal */

* {
    font-family: sans-serif;
}

.selector-universal * {
    font-size: 24px;
}

/* 
Pseudoclases - Dan estilos dependiendo del contexto, posici√≥n o estado del elemento
https://developer.mozilla.org/es/docs/Web/CSS/Pseudo-classes
*/

.form-pseudoclases *:required {
    border-color: yellow;
}

/* Es decir que todav√≠a no esta llena o no es v√°lida */
.form-pseudoclases *:invalid {
    border-color: red;
}

.form-pseudoclases *:focus {
    background-color: skyblue;
}

.form-pseudoclases *:disabled {
    background-color: pink;
}

.menu-pseudoclases a:visited {
    color: olive;
}

.menu-pseudoclases a:hover {
    color: orange;
}

.p-pseudoclases:hover {
    font-size: 20px;
}

#temario-css:target {
    background-color: lightgreen;
}

.lista-pseudoclases li:first-child {
    color: green;
}

.lista-pseudoclases li:last-child {
    color: violet;
}

.lista-pseudoclases li:nth-child(3) {
    color: navy;
}

/* ESTO QUIERE DECIR QUE VA DE 4 EN 4, SIRVE PARA HACER PATRONES */
.lista-pseudoclases li:nth-child(4n) {
    font-size: 20px;
}

/*2.34 Video Jon Mircha 2/5*/
.lista-pseudoclases li:nth-child(3n + 1) {
    font-weight: bold;
}

.lista-pseudoclases li:nth-child(even) {
    background-color: yellow;
}

.lista-pseudoclases li:nth-child(odd) {
    background-color: orange;
}

/* Para aplicar estilos a la primera etiqueta de tipo parrafo, esto va por tipo de etiquetas */
.articulo-pseudoclases p:first-of-type {
    background-color: pink;
}

.articulo-pseudoclases p:last-of-type {
    background-color: violet;
}

/* Se puede aplicar las formulas de patrones y even y odd */
.articulo-pseudoclases p:nth-of-type(3) {
    background-color: fuchsia;
}

.articulo-pseudoclases *:not(p) {
    background-color: beige;
}

/*
Pseudoelementos - Dan estilos a partes espec√≠ficas de un elemento, se usa el :: para diferenciarlos de las pseudoclases
https://developer.mozilla.org/es/docs/Web/CSS/Pseudoelementos
*/


/* OJO es buena practica poner :: para identificar que es un Pseudoelemento */
.saga-geminis::before {
    content: "ü§º‚Äç‚ôÇÔ∏è";
}

.saga-geminis::after {
    content: "‚ôä";
}

.saga-precio::before {
    content: "$";
    font-weight: bold;
}

.saga-precio::after {
    content: "USD";
    font-weight: bold;
}

.p-pseudoelementos::first-letter {
    font-weight: bold;
    font-size: 32px;
}

.p-pseudoelementos::first-line {
    color: coral;
}

.p-pseudoelementos::selection {
    color: greenyellow;
    background-color: black;
}

.input-pseudoelementos::placeholder {
    color: green;
}

/* Agrupar Selectores */
.form-agrupar-selectores input[type="text"],
.form-agrupar-selectores input[type="email"],
.form-agrupar-selectores textarea {
    border-color: yellow;
    border-width: 2px;
    border-style: dashed;
    background-color: black;
    font-size: 20px;
    display: block;
    width: 300px;
}

/* El Algoritmo de CSS: Es la forma en que el navegador aplica los estilos al documento HTML. Es vital entender este concepto para que entiendas como se aplican y en algunas ocasiones se sobreescriben las reglas CSS.
    1) La Cascada.
    2) La Especificidad.
    3) La Herencia.
    
    La Cascada es el mecanismo en que el navegador aplica los estilos. Y toma en cuenta lo siguiente en este orden:
    1) El Origen del C√≥digo:
    - El User Agent (los estilos por defecto del navegador)
    - Personalizaciones del usuario.
    - Los estilos del autor.
    2) La Especificidad del Selector
    3) Orden de Aparici√≥n

La Especificidad es el peso que tiene un selector cuando hay conflicto de estilos. Se calcula de la siguiente forma:
    Etiquetas y pseudoelementos -------------- 0,0,0,1
    Clases, atributos y pseudoclases ------------0,0,1,0
    Identificadores -------------------------------0,1,0,0
    Estilos en l√≠nea--------------------------------1,0,0,0
    !important ------------------Rompe la especificidad

La Herencia, es la capacidad de un selector de obtener (heredar) los valores de sus ancestros m√°s cercanos, para aplicarla se usa el valor inherit, si queremos evitarla podemos asignar otro valor o inicializar la propiedad en cuesti√≥n con el valor initial

https://web.dev/learn/css/inheritance/#which-properties-are-inheritable
    */

blockquote#cita-marco.cita-marco {
    background-color: lightsteelblue;
}

blockquote {
    background-color: burlywood;
}

#cita-marco {
    background-color: lightgreen;
}

blockquote.cita-marco {
    background-color: tomato;
}

.cita-marco {
    background-color: cornflowerblue;
}

.cita-marco {
    background-color: crimson !important;
}

blockquote#cita-marco {
    background-color: lightsalmon;
}

.cita-marco {
    background-color: moccasin !important;
    background-color: darkorange !important;
    font-size: 32px;
    border-style: dotted;
    border-color: red;
}

.cita-marco cite {
    background-color: pink;
    background-color: inherit;
    font-size: 24px;
    font-size: initial;
    border-style: inherit;
    border-color: inherit;
}

/* 
https://autoprefixer.github.io/
https://caniuse.com/

Prefijos de los navegadores
-webkit-user-select: none;
-moz-user-select: none;
-ms-user-select: none;
user-select: none;
*/